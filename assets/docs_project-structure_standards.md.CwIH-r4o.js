import{_ as e,c as t,o as a,a4 as o}from"./chunks/framework.BMYv83s3.js";const m=JSON.parse('{"title":"Standards","description":"","frontmatter":{},"headers":[],"relativePath":"docs/project-structure/standards.md","filePath":"docs/project-structure/standards.md"}'),r={name:"docs/project-structure/standards.md"},l=o('<h1 id="standards" tabindex="-1">Standards <a class="header-anchor" href="#standards" aria-label="Permalink to &quot;Standards&quot;">​</a></h1><p>This page will list a few of the rules for working in this project. If you disagree with any of the rules below, please feel free to suggest improvements with whatever changes are required in a pull request.</p><h2 id="general-rules" tabindex="-1">General rules <a class="header-anchor" href="#general-rules" aria-label="Permalink to &quot;General rules&quot;">​</a></h2><ul><li>Use the recommended VSCode extensions <ul><li>If you are not using VSCode, please do suggest similar tools</li></ul></li><li>Commit messages should start with an emoji, have a look at <a href="https://gitmoji.dev" target="_blank" rel="noreferrer">gitmoji.dev</a></li></ul><h2 id="ts-rules" tabindex="-1">TS rules <a class="header-anchor" href="#ts-rules" aria-label="Permalink to &quot;TS rules&quot;">​</a></h2><ul><li>Avoid default exports.</li><li>Use Arrow functions by default, only using the conventional functional declaration or classes when <code>this</code> is required.</li><li>Unit tests for a file should be placed next to the file being tested</li><li>The filename of the unit test file should match the file being tested but it should have the suffix <code>.test.ts</code></li><li>When creating an injectable service, you should export a function to get the service from the dependency injection container</li></ul><h2 id="web" tabindex="-1">Web <a class="header-anchor" href="#web" aria-label="Permalink to &quot;Web&quot;">​</a></h2><ul><li>Avoid default exports. <ul><li>Except for lazy loaded pages, the need default exports.</li></ul></li><li>1 component per file.</li><li><a href="https://storybook.js.org" target="_blank" rel="noreferrer">Storybook</a> stories should be located next to the component being tested.</li><li>A <a href="https://storybook.js.org" target="_blank" rel="noreferrer">Storybook</a> story file should only test a single component.</li><li>Do not import anything from <code>@api</code> and <code>@data</code> when within the <code>web</code> folder</li></ul><h2 id="api-data" tabindex="-1">API &amp; Data <a class="header-anchor" href="#api-data" aria-label="Permalink to &quot;API &amp; Data&quot;">​</a></h2><ul><li>Do not import anything from <code>@web</code> when within the <code>api</code> and <code>data</code> folders</li></ul>',10),i=[l];function s(n,d,h,c,u,f){return a(),t("div",null,i)}const b=e(r,[["render",s]]);export{m as __pageData,b as default};
