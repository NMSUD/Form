import{D as F,F as G,b as v,c as $,T as A,I as B,d as D,e as L,o as M,U as S,a as U}from"./debugNode-95c00bf2.js";import{c as s,e as R,b as t,F as j,S as V}from"./store-b630eac4.js";import{g as I}from"./form-7169fb77.js";import{u as E}from"./useValidation-560d312b.js";import{H}from"./helpIconTooltip-da4be836.js";import{g as N}from"./logService-94d63054.js";import"./_commonjsHelpers-725317a4.js";const y=o=>{let d,p,h;const[i,f]=E(o.validation),[c,m]=s(""),[l,C]=s(""),[u,x]=s(""),[g,T]=s("");R(()=>{o.showValidationMessages===!0&&f(o.value)},[o.showValidationMessages]);const b=(e,n)=>M(r=>{if(r==null)return;r.length>4&&(r=r.slice(0,4)),e(r),r.split("").filter(w=>I.includes(w.toLowerCase())).join("").length===4&&n?.focus?.()});return R(()=>{const e=[c(),l(),u(),g()].join(":").split("").filter(r=>I.includes(r.toLowerCase())).join("").toUpperCase();N().i(e);const n=e.split(":");m(n[0]),C(n[1]),x(n[2]),T(n[3]),f(e),o.onChange(e)},[c,l,u,g]),t(L,{get invalid(){return!i().isValid},get children(){return[t(F,{name:"GalacticCoordsInput"}),t(G,{textAlign:"center",get for(){return o.id},get children(){return t(H,{get label(){return o.label},get helpText(){return o.helpText}})}}),t(v,{get children(){return t(j,{each:[{id:"1",accessor:c,setter:m,setCurrentRef:e=>e,nextRef:()=>d},{id:"2",accessor:l,setter:C,setCurrentRef:e=>d=e,nextRef:()=>p},{id:"3",accessor:u,setter:x,setCurrentRef:e=>p=e,nextRef:()=>h},{id:"4",accessor:g,setter:T,setCurrentRef:e=>h=e}],children:(e,n)=>[t(V,{get when(){return n()!==0},get children(){return t($,{get children(){return t(A,{p:"$2",fontWeight:"bolder",children:":"})}})}}),t(B,{ref:r=>e.setCurrentRef(r),get id(){return`galactic-group-${e.id}`},class:"noselect",textAlign:"center",minWidth:"100px",get placeholder(){return`${e.id}${e.id}${e.id}${e.id}`},get value(){return e.accessor()},get onInput(){return b(e.setter,e.nextRef?.())}})]})}}),t(V,{get when(){return!i().isValid},get children(){return t(D,{get children(){return i().errorMessage}})}})]}})},K={title:"Form/GalacticCoordsInput",component:y,decorators:[S],tags:["autodocs"],argTypes:{...U()}},a={args:{label:"Galactic coordinates",placeholder:"this is a placeholder",helpText:"This is a help icon with a tooltip",onChange:()=>{}}};a.parameters={...a.parameters,docs:{...a.parameters?.docs,source:{originalSource:`{
  args: {
    label: 'Galactic coordinates',
    placeholder: 'this is a placeholder',
    helpText: 'This is a help icon with a tooltip',
    onChange: () => {}
  }
}`,...a.parameters?.docs?.source}}};const Q=["Basic"];export{a as Basic,Q as __namedExportsOrder,K as default};
